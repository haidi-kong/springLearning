<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ilearning.pay.dal.mysql.parent.ParentMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
        文档可见：https://www.iocoder.cn/MyBatis/x-plugins/
     -->
    <resultMap id="BaseResultMap" type="com.ilearning.pay.dal.dataobject.parent.ParentDO2" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="VARCHAR" />
        <collection property="parentItemDOList" javaType="java.util.List" ofType="com.ilearning.pay.dal.dataobject.parentItem.ParentItemDO">
            <id column="item_id" property="id" jdbcType="BIGINT" />
            <result column="order_id" property="orderId" jdbcType="BIGINT" />
            <result column="item_status" property="status" jdbcType="VARCHAR" />
            <result column="item_user_id" property="userId" jdbcType="INTEGER" />
        </collection>
    </resultMap>

    <select id="selectPageDetail" resultMap="BaseResultMap">
        select
        l.id, l.user_id, l.status,
         r.id as item_id, r.order_id, r.status as item_status, r.user_id as item_user_id
        from pay_parent as l
        left join pay_parent_item r on l.id = r.order_id
        where 1= 1
        <if test="req.userId != null and req.userId != ''" >
            and l.user_id = #{req.userId}
        </if>
        <if test="req.userId != null and req.userId != ''" >
            and r.user_id = #{req.userId}
        </if>
        <if test="req.updateTime != null and req.updateTime != ''" >
            and l.update_time > #{req.updateTime}
        </if>
    </select>

    <select id="selectByRangeId" resultMap="BaseResultMap">
        select
        l.id, l.user_id, l.status,
        r.id as item_id, r.order_id, r.status as item_status, r.user_id as item_user_id
        from pay_parent as l
        left join pay_parent_item r on l.id = r.order_id
        where l.user_id
        between #{id1} and #{id2}
    </select>

</mapper>
